[{"name":"abstract class Window","description":"com.github.mnemotechnician.mkui.windows.Window","location":"lib/com.github.mnemotechnician.mkui.windows/-window/index.html","searchKeys":["Window","abstract class Window","com.github.mnemotechnician.mkui.windows.Window"]},{"name":"abstract fun onCreate()","description":"com.github.mnemotechnician.mkui.windows.Window.onCreate","location":"lib/com.github.mnemotechnician.mkui.windows/-window/on-create.html","searchKeys":["onCreate","abstract fun onCreate()","com.github.mnemotechnician.mkui.windows.Window.onCreate"]},{"name":"abstract val closeable: Boolean","description":"com.github.mnemotechnician.mkui.windows.Window.closeable","location":"lib/com.github.mnemotechnician.mkui.windows/-window/closeable.html","searchKeys":["closeable","abstract val closeable: Boolean","com.github.mnemotechnician.mkui.windows.Window.closeable"]},{"name":"abstract val name: String","description":"com.github.mnemotechnician.mkui.windows.Window.name","location":"lib/com.github.mnemotechnician.mkui.windows/-window/name.html","searchKeys":["name","abstract val name: String","com.github.mnemotechnician.mkui.windows.Window.name"]},{"name":"fun Cell<*>.scaleFont(scale: Float): Cell<*>","description":"com.github.mnemotechnician.mkui.scaleFont","location":"lib/com.github.mnemotechnician.mkui/scale-font.html","searchKeys":["scaleFont","fun Cell<*>.scaleFont(scale: Float): Cell<*>","com.github.mnemotechnician.mkui.scaleFont"]},{"name":"fun Cell<*>.scaleImage(scaling: Scaling): Cell<*>","description":"com.github.mnemotechnician.mkui.scaleImage","location":"lib/com.github.mnemotechnician.mkui/scale-image.html","searchKeys":["scaleImage","fun Cell<*>.scaleImage(scaling: Scaling): Cell<*>","com.github.mnemotechnician.mkui.scaleImage"]},{"name":"fun Element.shrink(invalidateParents: Boolean = false)","description":"com.github.mnemotechnician.mkui.shrink","location":"lib/com.github.mnemotechnician.mkui/shrink.html","searchKeys":["shrink","fun Element.shrink(invalidateParents: Boolean = false)","com.github.mnemotechnician.mkui.shrink"]},{"name":"fun Group.deepShrink(shrinkParents: Boolean = false, invalidateParents: Boolean = true)","description":"com.github.mnemotechnician.mkui.deepShrink","location":"lib/com.github.mnemotechnician.mkui/deep-shrink.html","searchKeys":["deepShrink","fun Group.deepShrink(shrinkParents: Boolean = false, invalidateParents: Boolean = true)","com.github.mnemotechnician.mkui.deepShrink"]},{"name":"fun Page(name: String, background: Drawable = Styles.none)","description":"com.github.mnemotechnician.mkui.ui.TablePager.Page.Page","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/-page/-page.html","searchKeys":["Page","fun Page(name: String, background: Drawable = Styles.none)","com.github.mnemotechnician.mkui.ui.TablePager.Page.Page"]},{"name":"fun Table.addImage(drawable: Drawable, scaling: Scaling = Scaling.stretch): Cell<Image>","description":"com.github.mnemotechnician.mkui.addImage","location":"lib/com.github.mnemotechnician.mkui/add-image.html","searchKeys":["addImage","fun Table.addImage(drawable: Drawable, scaling: Scaling = Scaling.stretch): Cell<Image>","com.github.mnemotechnician.mkui.addImage"]},{"name":"fun Table.addImage(drawable: TextureRegion, scaling: Scaling = Scaling.stretch): Cell<Image>","description":"com.github.mnemotechnician.mkui.addImage","location":"lib/com.github.mnemotechnician.mkui/add-image.html","searchKeys":["addImage","fun Table.addImage(drawable: TextureRegion, scaling: Scaling = Scaling.stretch): Cell<Image>","com.github.mnemotechnician.mkui.addImage"]},{"name":"fun Table.addLabel(text: CharSequence, style: Label.LabelStyle = Styles.defaultLabel, wrap: Boolean = false, ellipsis: String? = null, alignment: Int = Align.center): Cell<Label>","description":"com.github.mnemotechnician.mkui.addLabel","location":"lib/com.github.mnemotechnician.mkui/add-label.html","searchKeys":["addLabel","fun Table.addLabel(text: CharSequence, style: Label.LabelStyle = Styles.defaultLabel, wrap: Boolean = false, ellipsis: String? = null, alignment: Int = Align.center): Cell<Label>","com.github.mnemotechnician.mkui.addLabel"]},{"name":"fun Table.addStack(vararg elements: Element): Cell<Stack>","description":"com.github.mnemotechnician.mkui.addStack","location":"lib/com.github.mnemotechnician.mkui/add-stack.html","searchKeys":["addStack","fun Table.addStack(vararg elements: Element): Cell<Stack>","com.github.mnemotechnician.mkui.addStack"]},{"name":"fun Table.hsplitter(color: Color = Color.white, padTop: Float = 5.0f, padBottom: Float = padTop): Cell<Image>","description":"com.github.mnemotechnician.mkui.hsplitter","location":"lib/com.github.mnemotechnician.mkui/hsplitter.html","searchKeys":["hsplitter","fun Table.hsplitter(color: Color = Color.white, padTop: Float = 5.0f, padBottom: Float = padTop): Cell<Image>","com.github.mnemotechnician.mkui.hsplitter"]},{"name":"fun Table.scrollPane(style: ScrollPane.ScrollPaneStyle = Styles.defaultPane, element: Element): Cell<ScrollPane>","description":"com.github.mnemotechnician.mkui.scrollPane","location":"lib/com.github.mnemotechnician.mkui/scroll-pane.html","searchKeys":["scrollPane","fun Table.scrollPane(style: ScrollPane.ScrollPaneStyle = Styles.defaultPane, element: Element): Cell<ScrollPane>","com.github.mnemotechnician.mkui.scrollPane"]},{"name":"fun Table.vsplitter(color: Color = Color.white, padLeft: Float = 5.0f, padRight: Float = padLeft): Cell<Image>","description":"com.github.mnemotechnician.mkui.vsplitter","location":"lib/com.github.mnemotechnician.mkui/vsplitter.html","searchKeys":["vsplitter","fun Table.vsplitter(color: Color = Color.white, padLeft: Float = 5.0f, padRight: Float = padLeft): Cell<Image>","com.github.mnemotechnician.mkui.vsplitter"]},{"name":"fun TablePager(vertical: Boolean = false, background: Drawable = Styles.black3)","description":"com.github.mnemotechnician.mkui.ui.TablePager.TablePager","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/-table-pager.html","searchKeys":["TablePager","fun TablePager(vertical: Boolean = false, background: Drawable = Styles.black3)","com.github.mnemotechnician.mkui.ui.TablePager.TablePager"]},{"name":"fun Window()","description":"com.github.mnemotechnician.mkui.windows.Window.Window","location":"lib/com.github.mnemotechnician.mkui.windows/-window/-window.html","searchKeys":["Window","fun Window()","com.github.mnemotechnician.mkui.windows.Window.Window"]},{"name":"fun addPage(pageName: String, element: Element): TablePager.Page","description":"com.github.mnemotechnician.mkui.ui.TablePager.addPage","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/add-page.html","searchKeys":["addPage","fun addPage(pageName: String, element: Element): TablePager.Page","com.github.mnemotechnician.mkui.ui.TablePager.addPage"]},{"name":"fun createWindow(window: Window)","description":"com.github.mnemotechnician.mkui.windows.WindowManager.createWindow","location":"lib/com.github.mnemotechnician.mkui.windows/-window-manager/create-window.html","searchKeys":["createWindow","fun createWindow(window: Window)","com.github.mnemotechnician.mkui.windows.WindowManager.createWindow"]},{"name":"fun destroy()","description":"com.github.mnemotechnician.mkui.windows.Window.destroy","location":"lib/com.github.mnemotechnician.mkui.windows/-window/destroy.html","searchKeys":["destroy","fun destroy()","com.github.mnemotechnician.mkui.windows.Window.destroy"]},{"name":"fun findPage(pageName: String): TablePager.Page?","description":"com.github.mnemotechnician.mkui.ui.TablePager.findPage","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/find-page.html","searchKeys":["findPage","fun findPage(pageName: String): TablePager.Page?","com.github.mnemotechnician.mkui.ui.TablePager.findPage"]},{"name":"fun removePage(): Boolean","description":"com.github.mnemotechnician.mkui.ui.TablePager.Page.removePage","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/-page/remove-page.html","searchKeys":["removePage","fun removePage(): Boolean","com.github.mnemotechnician.mkui.ui.TablePager.Page.removePage"]},{"name":"fun removePage(page: TablePager.Page): Boolean","description":"com.github.mnemotechnician.mkui.ui.TablePager.removePage","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/remove-page.html","searchKeys":["removePage","fun removePage(page: TablePager.Page): Boolean","com.github.mnemotechnician.mkui.ui.TablePager.removePage"]},{"name":"fun removePage(pageName: String): Boolean","description":"com.github.mnemotechnician.mkui.ui.TablePager.removePage","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/remove-page.html","searchKeys":["removePage","fun removePage(pageName: String): Boolean","com.github.mnemotechnician.mkui.ui.TablePager.removePage"]},{"name":"fun show()","description":"com.github.mnemotechnician.mkui.ui.TablePager.Page.show","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/-page/show.html","searchKeys":["show","fun show()","com.github.mnemotechnician.mkui.ui.TablePager.Page.show"]},{"name":"inline fun <T : Element> Element.asOrNull(): T?","description":"com.github.mnemotechnician.mkui.asOrNull","location":"lib/com.github.mnemotechnician.mkui/as-or-null.html","searchKeys":["asOrNull","inline fun <T : Element> Element.asOrNull(): T?","com.github.mnemotechnician.mkui.asOrNull"]},{"name":"inline fun <T : Element> Group.child(index: Int): T","description":"com.github.mnemotechnician.mkui.child","location":"lib/com.github.mnemotechnician.mkui/child.html","searchKeys":["child","inline fun <T : Element> Group.child(index: Int): T","com.github.mnemotechnician.mkui.child"]},{"name":"inline fun <T : Element> Group.childOrNull(index: Int): T?","description":"com.github.mnemotechnician.mkui.childOrNull","location":"lib/com.github.mnemotechnician.mkui/child-or-null.html","searchKeys":["childOrNull","inline fun <T : Element> Group.childOrNull(index: Int): T?","com.github.mnemotechnician.mkui.childOrNull"]},{"name":"inline fun <T : Element> T.cell(): Cell<T>?","description":"com.github.mnemotechnician.mkui.cell","location":"lib/com.github.mnemotechnician.mkui/cell.html","searchKeys":["cell","inline fun <T : Element> T.cell(): Cell<T>?","com.github.mnemotechnician.mkui.cell"]},{"name":"inline fun <T> Cell<Element>.getAs(): T","description":"com.github.mnemotechnician.mkui.getAs","location":"lib/com.github.mnemotechnician.mkui/get-as.html","searchKeys":["getAs","inline fun <T> Cell<Element>.getAs(): T","com.github.mnemotechnician.mkui.getAs"]},{"name":"inline fun <T> Cell<Element?>.getAsOrNull(): T?","description":"com.github.mnemotechnician.mkui.getAsOrNull","location":"lib/com.github.mnemotechnician.mkui/get-as-or-null.html","searchKeys":["getAsOrNull","inline fun <T> Cell<Element?>.getAsOrNull(): T?","com.github.mnemotechnician.mkui.getAsOrNull"]},{"name":"inline fun Group.addTable(background: Drawable = Styles.none, constructor: Table.() -> Unit = {}): Table","description":"com.github.mnemotechnician.mkui.addTable","location":"lib/com.github.mnemotechnician.mkui/add-table.html","searchKeys":["addTable","inline fun Group.addTable(background: Drawable = Styles.none, constructor: Table.() -> Unit = {}): Table","com.github.mnemotechnician.mkui.addTable"]},{"name":"inline fun Table.addCollapser(crossinline shown: () -> Boolean = { true }, background: Drawable = Styles.none, animate: Boolean = false, constructor: Table.() -> Unit = {}): Cell<Collapser>","description":"com.github.mnemotechnician.mkui.addCollapser","location":"lib/com.github.mnemotechnician.mkui/add-collapser.html","searchKeys":["addCollapser","inline fun Table.addCollapser(crossinline shown: () -> Boolean = { true }, background: Drawable = Styles.none, animate: Boolean = false, constructor: Table.() -> Unit = {}): Cell<Collapser>","com.github.mnemotechnician.mkui.addCollapser"]},{"name":"inline fun Table.addCollapser(shown: Boolean = true, background: Drawable = Styles.none, constructor: Table.() -> Unit = {}): Cell<Collapser>","description":"com.github.mnemotechnician.mkui.addCollapser","location":"lib/com.github.mnemotechnician.mkui/add-collapser.html","searchKeys":["addCollapser","inline fun Table.addCollapser(shown: Boolean = true, background: Drawable = Styles.none, constructor: Table.() -> Unit = {}): Cell<Collapser>","com.github.mnemotechnician.mkui.addCollapser"]},{"name":"inline fun Table.addImage(crossinline provider: () -> TextureRegion, scaling: Scaling = Scaling.stretch): Cell<Image>","description":"com.github.mnemotechnician.mkui.addImage","location":"lib/com.github.mnemotechnician.mkui/add-image.html","searchKeys":["addImage","inline fun Table.addImage(crossinline provider: () -> TextureRegion, scaling: Scaling = Scaling.stretch): Cell<Image>","com.github.mnemotechnician.mkui.addImage"]},{"name":"inline fun Table.addLabel(crossinline provider: () -> CharSequence, style: Label.LabelStyle = Styles.defaultLabel, wrap: Boolean = true, ellipsis: String? = null, alignment: Int = Align.center): Cell<Label>","description":"com.github.mnemotechnician.mkui.addLabel","location":"lib/com.github.mnemotechnician.mkui/add-label.html","searchKeys":["addLabel","inline fun Table.addLabel(crossinline provider: () -> CharSequence, style: Label.LabelStyle = Styles.defaultLabel, wrap: Boolean = true, ellipsis: String? = null, alignment: Int = Align.center): Cell<Label>","com.github.mnemotechnician.mkui.addLabel"]},{"name":"inline fun Table.addStack(constructor: Stack.() -> Unit): Cell<Stack>","description":"com.github.mnemotechnician.mkui.addStack","location":"lib/com.github.mnemotechnician.mkui/add-stack.html","searchKeys":["addStack","inline fun Table.addStack(constructor: Stack.() -> Unit): Cell<Stack>","com.github.mnemotechnician.mkui.addStack"]},{"name":"inline fun Table.addTable(background: Drawable = Styles.none, constructor: Table.() -> Unit = {}): Cell<Table>","description":"com.github.mnemotechnician.mkui.addTable","location":"lib/com.github.mnemotechnician.mkui/add-table.html","searchKeys":["addTable","inline fun Table.addTable(background: Drawable = Styles.none, constructor: Table.() -> Unit = {}): Cell<Table>","com.github.mnemotechnician.mkui.addTable"]},{"name":"inline fun Table.buttonGroup(background: Drawable = Styles.none, constructor: Table.(ButtonGroup<Button>) -> Unit): Cell<Table>","description":"com.github.mnemotechnician.mkui.buttonGroup","location":"lib/com.github.mnemotechnician.mkui/button-group.html","searchKeys":["buttonGroup","inline fun Table.buttonGroup(background: Drawable = Styles.none, constructor: Table.(ButtonGroup<Button>) -> Unit): Cell<Table>","com.github.mnemotechnician.mkui.buttonGroup"]},{"name":"inline fun Table.customButton(constructor: Button.() -> Unit, style: Button.ButtonStyle = Styles.defaultb, crossinline onclick: Button.() -> Unit = {}): Cell<Button>","description":"com.github.mnemotechnician.mkui.customButton","location":"lib/com.github.mnemotechnician.mkui/custom-button.html","searchKeys":["customButton","inline fun Table.customButton(constructor: Button.() -> Unit, style: Button.ButtonStyle = Styles.defaultb, crossinline onclick: Button.() -> Unit = {}): Cell<Button>","com.github.mnemotechnician.mkui.customButton"]},{"name":"inline fun Table.hider(crossinline hideHorizontal: Table.() -> Boolean = { false }, crossinline hideVertical: Table.() -> Boolean = { false }, crossinline builder: Table.() -> Unit): Cell<Table>","description":"com.github.mnemotechnician.mkui.hider","location":"lib/com.github.mnemotechnician.mkui/hider.html","searchKeys":["hider","inline fun Table.hider(crossinline hideHorizontal: Table.() -> Boolean = { false }, crossinline hideVertical: Table.() -> Boolean = { false }, crossinline builder: Table.() -> Unit): Cell<Table>","com.github.mnemotechnician.mkui.hider"]},{"name":"inline fun Table.imageButton(crossinline provider: () -> TextureRegion, style: ImageButton.ImageButtonStyle = Styles.defaulti, crossinline onclick: ImageButton.() -> Unit = {}): Cell<ImageButton>","description":"com.github.mnemotechnician.mkui.imageButton","location":"lib/com.github.mnemotechnician.mkui/image-button.html","searchKeys":["imageButton","inline fun Table.imageButton(crossinline provider: () -> TextureRegion, style: ImageButton.ImageButtonStyle = Styles.defaulti, crossinline onclick: ImageButton.() -> Unit = {}): Cell<ImageButton>","com.github.mnemotechnician.mkui.imageButton"]},{"name":"inline fun Table.imageButton(image: Drawable, style: ImageButton.ImageButtonStyle = Styles.defaulti, crossinline onclick: ImageButton.() -> Unit = {}): Cell<ImageButton>","description":"com.github.mnemotechnician.mkui.imageButton","location":"lib/com.github.mnemotechnician.mkui/image-button.html","searchKeys":["imageButton","inline fun Table.imageButton(image: Drawable, style: ImageButton.ImageButtonStyle = Styles.defaulti, crossinline onclick: ImageButton.() -> Unit = {}): Cell<ImageButton>","com.github.mnemotechnician.mkui.imageButton"]},{"name":"inline fun Table.imageButton(image: TextureRegion, style: ImageButton.ImageButtonStyle = Styles.defaulti, crossinline onclick: ImageButton.() -> Unit = {}): Cell<ImageButton>","description":"com.github.mnemotechnician.mkui.imageButton","location":"lib/com.github.mnemotechnician.mkui/image-button.html","searchKeys":["imageButton","inline fun Table.imageButton(image: TextureRegion, style: ImageButton.ImageButtonStyle = Styles.defaulti, crossinline onclick: ImageButton.() -> Unit = {}): Cell<ImageButton>","com.github.mnemotechnician.mkui.imageButton"]},{"name":"inline fun Table.imageToggle(crossinline image: (Boolean) -> TextureRegion, toggleableStyle: Button.ButtonStyle = Styles.clearTogglei, crossinline ontoggle: Button.(Boolean) -> Unit = {}): Cell<Button>","description":"com.github.mnemotechnician.mkui.imageToggle","location":"lib/com.github.mnemotechnician.mkui/image-toggle.html","searchKeys":["imageToggle","inline fun Table.imageToggle(crossinline image: (Boolean) -> TextureRegion, toggleableStyle: Button.ButtonStyle = Styles.clearTogglei, crossinline ontoggle: Button.(Boolean) -> Unit = {}): Cell<Button>","com.github.mnemotechnician.mkui.imageToggle"]},{"name":"inline fun Table.imageToggle(text: Drawable, toggleableStyle: Button.ButtonStyle = Styles.clearTogglei, crossinline ontoggle: Button.(Boolean) -> Unit = {}): Cell<Button>","description":"com.github.mnemotechnician.mkui.imageToggle","location":"lib/com.github.mnemotechnician.mkui/image-toggle.html","searchKeys":["imageToggle","inline fun Table.imageToggle(text: Drawable, toggleableStyle: Button.ButtonStyle = Styles.clearTogglei, crossinline ontoggle: Button.(Boolean) -> Unit = {}): Cell<Button>","com.github.mnemotechnician.mkui.imageToggle"]},{"name":"inline fun Table.limitedScrollPane(limitW: Boolean = true, limitH: Boolean = limitW, style: ScrollPane.ScrollPaneStyle = Styles.defaultPane, constructor: Table.(ScrollPane) -> Unit): Cell<ScrollPane>","description":"com.github.mnemotechnician.mkui.limitedScrollPane","location":"lib/com.github.mnemotechnician.mkui/limited-scroll-pane.html","searchKeys":["limitedScrollPane","inline fun Table.limitedScrollPane(limitW: Boolean = true, limitH: Boolean = limitW, style: ScrollPane.ScrollPaneStyle = Styles.defaultPane, constructor: Table.(ScrollPane) -> Unit): Cell<ScrollPane>","com.github.mnemotechnician.mkui.limitedScrollPane"]},{"name":"inline fun Table.pager(vertical: Boolean = false, constructor: TablePager.() -> Unit): Cell<TablePager>","description":"com.github.mnemotechnician.mkui.pager","location":"lib/com.github.mnemotechnician.mkui/pager.html","searchKeys":["pager","inline fun Table.pager(vertical: Boolean = false, constructor: TablePager.() -> Unit): Cell<TablePager>","com.github.mnemotechnician.mkui.pager"]},{"name":"inline fun Table.scrollPane(style: ScrollPane.ScrollPaneStyle = Styles.defaultPane, constructor: Table.(ScrollPane) -> Unit): Cell<ScrollPane>","description":"com.github.mnemotechnician.mkui.scrollPane","location":"lib/com.github.mnemotechnician.mkui/scroll-pane.html","searchKeys":["scrollPane","inline fun Table.scrollPane(style: ScrollPane.ScrollPaneStyle = Styles.defaultPane, constructor: Table.(ScrollPane) -> Unit): Cell<ScrollPane>","com.github.mnemotechnician.mkui.scrollPane"]},{"name":"inline fun Table.textArea(text: String = \"\", style: TextField.TextFieldStyle = Styles.areaField, crossinline onchange: TextArea.(String) -> Unit = {}): Cell<TextArea>","description":"com.github.mnemotechnician.mkui.textArea","location":"lib/com.github.mnemotechnician.mkui/text-area.html","searchKeys":["textArea","inline fun Table.textArea(text: String = \"\", style: TextField.TextFieldStyle = Styles.areaField, crossinline onchange: TextArea.(String) -> Unit = {}): Cell<TextArea>","com.github.mnemotechnician.mkui.textArea"]},{"name":"inline fun Table.textButton(crossinline provider: () -> String, style: TextButton.TextButtonStyle = Styles.defaultt, wrap: Boolean = false, crossinline onclick: TextButton.() -> Unit = {}): Cell<TextButton>","description":"com.github.mnemotechnician.mkui.textButton","location":"lib/com.github.mnemotechnician.mkui/text-button.html","searchKeys":["textButton","inline fun Table.textButton(crossinline provider: () -> String, style: TextButton.TextButtonStyle = Styles.defaultt, wrap: Boolean = false, crossinline onclick: TextButton.() -> Unit = {}): Cell<TextButton>","com.github.mnemotechnician.mkui.textButton"]},{"name":"inline fun Table.textButton(text: String, style: TextButton.TextButtonStyle = Styles.defaultt, wrap: Boolean = false, crossinline onclick: TextButton.() -> Unit = {}): Cell<TextButton>","description":"com.github.mnemotechnician.mkui.textButton","location":"lib/com.github.mnemotechnician.mkui/text-button.html","searchKeys":["textButton","inline fun Table.textButton(text: String, style: TextButton.TextButtonStyle = Styles.defaultt, wrap: Boolean = false, crossinline onclick: TextButton.() -> Unit = {}): Cell<TextButton>","com.github.mnemotechnician.mkui.textButton"]},{"name":"inline fun Table.textField(text: String = \"\", style: TextField.TextFieldStyle = Styles.defaultField, crossinline onchange: TextField.(String) -> Unit = {}): Cell<TextField>","description":"com.github.mnemotechnician.mkui.textField","location":"lib/com.github.mnemotechnician.mkui/text-field.html","searchKeys":["textField","inline fun Table.textField(text: String = \"\", style: TextField.TextFieldStyle = Styles.defaultField, crossinline onchange: TextField.(String) -> Unit = {}): Cell<TextField>","com.github.mnemotechnician.mkui.textField"]},{"name":"inline fun Table.textToggle(crossinline text: (Boolean) -> String, toggleableStyle: Button.ButtonStyle = Styles.togglet, wrap: Boolean = false, crossinline ontoggle: Button.(Boolean) -> Unit = {}): Cell<Button>","description":"com.github.mnemotechnician.mkui.textToggle","location":"lib/com.github.mnemotechnician.mkui/text-toggle.html","searchKeys":["textToggle","inline fun Table.textToggle(crossinline text: (Boolean) -> String, toggleableStyle: Button.ButtonStyle = Styles.togglet, wrap: Boolean = false, crossinline ontoggle: Button.(Boolean) -> Unit = {}): Cell<Button>","com.github.mnemotechnician.mkui.textToggle"]},{"name":"inline fun Table.textToggle(text: String, toggleableStyle: Button.ButtonStyle = Styles.togglet, wrap: Boolean = false, crossinline ontoggle: Button.(Boolean) -> Unit = {}): Cell<Button>","description":"com.github.mnemotechnician.mkui.textToggle","location":"lib/com.github.mnemotechnician.mkui/text-toggle.html","searchKeys":["textToggle","inline fun Table.textToggle(text: String, toggleableStyle: Button.ButtonStyle = Styles.togglet, wrap: Boolean = false, crossinline ontoggle: Button.(Boolean) -> Unit = {}): Cell<Button>","com.github.mnemotechnician.mkui.textToggle"]},{"name":"inline fun Table.toggleButton(constructor: Button.() -> Unit, toggleableStyle: Button.ButtonStyle = Styles.togglet, crossinline ontoggle: Button.(Boolean) -> Unit = {}): Cell<Button>","description":"com.github.mnemotechnician.mkui.toggleButton","location":"lib/com.github.mnemotechnician.mkui/toggle-button.html","searchKeys":["toggleButton","inline fun Table.toggleButton(constructor: Button.() -> Unit, toggleableStyle: Button.ButtonStyle = Styles.togglet, crossinline ontoggle: Button.(Boolean) -> Unit = {}): Cell<Button>","com.github.mnemotechnician.mkui.toggleButton"]},{"name":"inline fun Table.wrapper(crossinline width: Table.(originalWidth: Float) -> Float = { it }, crossinline height: Table.(originalHeight: Float) -> Float = { it }, crossinline builder: Table.() -> Unit): Cell<Table>","description":"com.github.mnemotechnician.mkui.wrapper","location":"lib/com.github.mnemotechnician.mkui/wrapper.html","searchKeys":["wrapper","inline fun Table.wrapper(crossinline width: Table.(originalWidth: Float) -> Float = { it }, crossinline height: Table.(originalHeight: Float) -> Float = { it }, crossinline builder: Table.() -> Unit): Cell<Table>","com.github.mnemotechnician.mkui.wrapper"]},{"name":"inline fun addPage(pageName: String, constructor: TablePager.Page.() -> Unit): TablePager.Page","description":"com.github.mnemotechnician.mkui.ui.TablePager.addPage","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/add-page.html","searchKeys":["addPage","inline fun addPage(pageName: String, constructor: TablePager.Page.() -> Unit): TablePager.Page","com.github.mnemotechnician.mkui.ui.TablePager.addPage"]},{"name":"inline fun createBaseDialog(title: String = \"\", style: Dialog.DialogStyle = Styles.defaultDialog, addCloseButton: Boolean = false, closeOnBack: Boolean = true, crossinline configurator: BaseDialog.() -> Unit): BaseDialog","description":"com.github.mnemotechnician.mkui.createBaseDialog","location":"lib/com.github.mnemotechnician.mkui/create-base-dialog.html","searchKeys":["createBaseDialog","inline fun createBaseDialog(title: String = \"\", style: Dialog.DialogStyle = Styles.defaultDialog, addCloseButton: Boolean = false, closeOnBack: Boolean = true, crossinline configurator: BaseDialog.() -> Unit): BaseDialog","com.github.mnemotechnician.mkui.createBaseDialog"]},{"name":"inline fun createDialog(title: String = \"\", style: Dialog.DialogStyle = Styles.defaultDialog, addCloseButton: Boolean = false, closeOnBack: Boolean = true, constructor: (title: String, style: Dialog.DialogStyle) -> Dialog = { t, s -> Dialog(t, s) }, configurator: Dialog.() -> Unit): Dialog","description":"com.github.mnemotechnician.mkui.createDialog","location":"lib/com.github.mnemotechnician.mkui/create-dialog.html","searchKeys":["createDialog","inline fun createDialog(title: String = \"\", style: Dialog.DialogStyle = Styles.defaultDialog, addCloseButton: Boolean = false, closeOnBack: Boolean = true, constructor: (title: String, style: Dialog.DialogStyle) -> Dialog = { t, s -> Dialog(t, s) }, configurator: Dialog.() -> Unit): Dialog","com.github.mnemotechnician.mkui.createDialog"]},{"name":"inline fun createTable(background: Drawable = Styles.none, constructor: Table.() -> Unit = {}): Table","description":"com.github.mnemotechnician.mkui.createTable","location":"lib/com.github.mnemotechnician.mkui/create-table.html","searchKeys":["createTable","inline fun createTable(background: Drawable = Styles.none, constructor: Table.() -> Unit = {}): Table","com.github.mnemotechnician.mkui.createTable"]},{"name":"inline fun createWindow(name: String, crossinline constructor: Table.() -> Unit)","description":"com.github.mnemotechnician.mkui.windows.WindowManager.createWindow","location":"lib/com.github.mnemotechnician.mkui.windows/-window-manager/create-window.html","searchKeys":["createWindow","inline fun createWindow(name: String, crossinline constructor: Table.() -> Unit)","com.github.mnemotechnician.mkui.windows.WindowManager.createWindow"]},{"name":"inline fun createWrapper(crossinline width: Table.(originalWidth: Float) -> Float = { it }, crossinline height: Table.(originalHeight: Float) -> Float = { it }, crossinline builder: Table.() -> Unit): Table","description":"com.github.mnemotechnician.mkui.createWrapper","location":"lib/com.github.mnemotechnician.mkui/create-wrapper.html","searchKeys":["createWrapper","inline fun createWrapper(crossinline width: Table.(originalWidth: Float) -> Float = { it }, crossinline height: Table.(originalHeight: Float) -> Float = { it }, crossinline builder: Table.() -> Unit): Table","com.github.mnemotechnician.mkui.createWrapper"]},{"name":"inner class Page(name: String, background: Drawable) : Table","description":"com.github.mnemotechnician.mkui.ui.TablePager.Page","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/-page/index.html","searchKeys":["Page","inner class Page(name: String, background: Drawable) : Table","com.github.mnemotechnician.mkui.ui.TablePager.Page"]},{"name":"lateinit var buttonsTable: Table","description":"com.github.mnemotechnician.mkui.ui.TablePager.buttonsTable","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/buttons-table.html","searchKeys":["buttonsTable","lateinit var buttonsTable: Table","com.github.mnemotechnician.mkui.ui.TablePager.buttonsTable"]},{"name":"lateinit var pageContainer: Table","description":"com.github.mnemotechnician.mkui.ui.TablePager.pageContainer","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/page-container.html","searchKeys":["pageContainer","lateinit var pageContainer: Table","com.github.mnemotechnician.mkui.ui.TablePager.pageContainer"]},{"name":"lateinit var table: Table","description":"com.github.mnemotechnician.mkui.windows.Window.table","location":"lib/com.github.mnemotechnician.mkui.windows/-window/table.html","searchKeys":["table","lateinit var table: Table","com.github.mnemotechnician.mkui.windows.Window.table"]},{"name":"object WindowManager","description":"com.github.mnemotechnician.mkui.windows.WindowManager","location":"lib/com.github.mnemotechnician.mkui.windows/-window-manager/index.html","searchKeys":["WindowManager","object WindowManager","com.github.mnemotechnician.mkui.windows.WindowManager"]},{"name":"open class TablePager(vertical: Boolean, background: Drawable) : Table","description":"com.github.mnemotechnician.mkui.ui.TablePager","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/index.html","searchKeys":["TablePager","open class TablePager(vertical: Boolean, background: Drawable) : Table","com.github.mnemotechnician.mkui.ui.TablePager"]},{"name":"open fun addAction(action: Action)","description":"com.github.mnemotechnician.mkui.windows.Window.addAction","location":"lib/com.github.mnemotechnician.mkui.windows/-window/add-action.html","searchKeys":["addAction","open fun addAction(action: Action)","com.github.mnemotechnician.mkui.windows.Window.addAction"]},{"name":"open fun addPage(name: String, page: Table): Cell<TextButton>","description":"com.github.mnemotechnician.mkui.ui.TablePager.addPage","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/add-page.html","searchKeys":["addPage","open fun addPage(name: String, page: Table): Cell<TextButton>","com.github.mnemotechnician.mkui.ui.TablePager.addPage"]},{"name":"open fun onDestroy()","description":"com.github.mnemotechnician.mkui.windows.Window.onDestroy","location":"lib/com.github.mnemotechnician.mkui.windows/-window/on-destroy.html","searchKeys":["onDestroy","open fun onDestroy()","com.github.mnemotechnician.mkui.windows.Window.onDestroy"]},{"name":"open fun onDrag()","description":"com.github.mnemotechnician.mkui.windows.Window.onDrag","location":"lib/com.github.mnemotechnician.mkui.windows/-window/on-drag.html","searchKeys":["onDrag","open fun onDrag()","com.github.mnemotechnician.mkui.windows.Window.onDrag"]},{"name":"open fun onFullScreen(fullscreen: Boolean)","description":"com.github.mnemotechnician.mkui.windows.Window.onFullScreen","location":"lib/com.github.mnemotechnician.mkui.windows/-window/on-full-screen.html","searchKeys":["onFullScreen","open fun onFullScreen(fullscreen: Boolean)","com.github.mnemotechnician.mkui.windows.Window.onFullScreen"]},{"name":"open fun onToggle(collapsed: Boolean)","description":"com.github.mnemotechnician.mkui.windows.Window.onToggle","location":"lib/com.github.mnemotechnician.mkui.windows/-window/on-toggle.html","searchKeys":["onToggle","open fun onToggle(collapsed: Boolean)","com.github.mnemotechnician.mkui.windows.Window.onToggle"]},{"name":"open fun onUpdate()","description":"com.github.mnemotechnician.mkui.windows.Window.onUpdate","location":"lib/com.github.mnemotechnician.mkui.windows/-window/on-update.html","searchKeys":["onUpdate","open fun onUpdate()","com.github.mnemotechnician.mkui.windows.Window.onUpdate"]},{"name":"open fun shrink()","description":"com.github.mnemotechnician.mkui.windows.Window.shrink","location":"lib/com.github.mnemotechnician.mkui.windows/-window/shrink.html","searchKeys":["shrink","open fun shrink()","com.github.mnemotechnician.mkui.windows.Window.shrink"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.mnemotechnician.mkui.windows.Window.equals","location":"lib/com.github.mnemotechnician.mkui.windows/-window/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.mnemotechnician.mkui.windows.Window.equals"]},{"name":"open override fun hashCode(): Int","description":"com.github.mnemotechnician.mkui.windows.Window.hashCode","location":"lib/com.github.mnemotechnician.mkui.windows/-window/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.mnemotechnician.mkui.windows.Window.hashCode"]},{"name":"open override fun setBackground(drawable: Drawable)","description":"com.github.mnemotechnician.mkui.ui.TablePager.setBackground","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/set-background.html","searchKeys":["setBackground","open override fun setBackground(drawable: Drawable)","com.github.mnemotechnician.mkui.ui.TablePager.setBackground"]},{"name":"open val supportsFullScreen: Boolean","description":"com.github.mnemotechnician.mkui.windows.Window.supportsFullScreen","location":"lib/com.github.mnemotechnician.mkui.windows/-window/supports-full-screen.html","searchKeys":["supportsFullScreen","open val supportsFullScreen: Boolean","com.github.mnemotechnician.mkui.windows.Window.supportsFullScreen"]},{"name":"operator fun Group.plus(other: Element): Group","description":"com.github.mnemotechnician.mkui.plus","location":"lib/com.github.mnemotechnician.mkui/plus.html","searchKeys":["plus","operator fun Group.plus(other: Element): Group","com.github.mnemotechnician.mkui.plus"]},{"name":"operator fun Table.plus(other: Element): Table","description":"com.github.mnemotechnician.mkui.plus","location":"lib/com.github.mnemotechnician.mkui/plus.html","searchKeys":["plus","operator fun Table.plus(other: Element): Table","com.github.mnemotechnician.mkui.plus"]},{"name":"val button: TextButton","description":"com.github.mnemotechnician.mkui.ui.TablePager.Page.button","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/-page/button.html","searchKeys":["button","val button: TextButton","com.github.mnemotechnician.mkui.ui.TablePager.Page.button"]},{"name":"val pages: HashSet<TablePager.Page>","description":"com.github.mnemotechnician.mkui.ui.TablePager.pages","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/pages.html","searchKeys":["pages","val pages: HashSet<TablePager.Page>","com.github.mnemotechnician.mkui.ui.TablePager.pages"]},{"name":"val parent: TablePager","description":"com.github.mnemotechnician.mkui.ui.TablePager.Page.parent","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/-page/parent.html","searchKeys":["parent","val parent: TablePager","com.github.mnemotechnician.mkui.ui.TablePager.Page.parent"]},{"name":"val vertical: Boolean = false","description":"com.github.mnemotechnician.mkui.ui.TablePager.vertical","location":"lib/com.github.mnemotechnician.mkui.ui/-table-pager/vertical.html","searchKeys":["vertical","val vertical: Boolean = false","com.github.mnemotechnician.mkui.ui.TablePager.vertical"]},{"name":"var Label.content: CharSequence","description":"com.github.mnemotechnician.mkui.content","location":"lib/com.github.mnemotechnician.mkui/content.html","searchKeys":["content","var Label.content: CharSequence","com.github.mnemotechnician.mkui.content"]},{"name":"var TextButton.content: CharSequence","description":"com.github.mnemotechnician.mkui.content","location":"lib/com.github.mnemotechnician.mkui/content.html","searchKeys":["content","var TextButton.content: CharSequence","com.github.mnemotechnician.mkui.content"]},{"name":"var TextField.content: String","description":"com.github.mnemotechnician.mkui.content","location":"lib/com.github.mnemotechnician.mkui/content.html","searchKeys":["content","var TextField.content: String","com.github.mnemotechnician.mkui.content"]},{"name":"var TextField.hint: String?","description":"com.github.mnemotechnician.mkui.hint","location":"lib/com.github.mnemotechnician.mkui/hint.html","searchKeys":["hint","var TextField.hint: String?","com.github.mnemotechnician.mkui.hint"]},{"name":"var fullScreen: Boolean = false","description":"com.github.mnemotechnician.mkui.windows.Window.fullScreen","location":"lib/com.github.mnemotechnician.mkui.windows/-window/full-screen.html","searchKeys":["fullScreen","var fullScreen: Boolean = false","com.github.mnemotechnician.mkui.windows.Window.fullScreen"]},{"name":"var isCollapsed: Boolean = false","description":"com.github.mnemotechnician.mkui.windows.Window.isCollapsed","location":"lib/com.github.mnemotechnician.mkui.windows/-window/is-collapsed.html","searchKeys":["isCollapsed","var isCollapsed: Boolean = false","com.github.mnemotechnician.mkui.windows.Window.isCollapsed"]},{"name":"var isDragged: Boolean = false","description":"com.github.mnemotechnician.mkui.windows.Window.isDragged","location":"lib/com.github.mnemotechnician.mkui.windows/-window/is-dragged.html","searchKeys":["isDragged","var isDragged: Boolean = false","com.github.mnemotechnician.mkui.windows.Window.isDragged"]}]
